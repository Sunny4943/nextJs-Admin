/*import React, { useState } from 'react';
import OtpInput from 'react-otp-input';

export default function App() {
    const [otp, setOtp] = useState('');

    return (
        
        <div>
            <OtpInput
                value={otp}
                onChange={setOtp}
                numInputs={4}
                renderSeparator={<span>-</span>}
                renderInput={(props) => <input {...props} />}
            />
        </div>
    );
}*/
import Head from 'next/head'
import styles from '../styles/Home.module.css'
import React from "react";
import { IoIosPerson, IoIosBarcode } from 'react-icons/io';
import Router from 'next/router'
import * as Action from '../src/actions'
import { fethClientDetails } from './../src/admin/supportFunction'
import { toast, Slide, ToastContainer } from 'react-toastify';

import 'react-toastify/dist/ReactToastify.css';
import { store } from '../src/store';
import "bootstrap/dist/css/bootstrap.min.css";

import OtpInput from 'react-otp-input';
export default class Otp_View extends React.Component {
    constructor(props) {
        super(props);
        this.state = {
            userName: "", barCode: "", loginChecked: 0, otp: "", apiKey: "", secretKey: "", password: "",
            accessToken: "", requestToken: "", refreshToken: "", loginTime: ""
        }
    }
    sleep(ms) {
        return new Promise((resolve) => setTimeout(resolve, ms));
    }
    GenerateOtp = async () => {
        if ((this.state.userName) && (this.state.barCode)) {
            var ClientRes = await fethClientDetails(this.state.userName).then(function (result) {
                //console.log(JSON.stringify(result))
                return result ? result : [];
            }).catch((err) => { console.log(err) });
            if (ClientRes) {
                console.log(JSON.stringify(ClientRes))
                for (var i = 0; i < ClientRes.length; i++) {
                    this.setState({ apiKey: ClientRes[i]['ApiKey'], secretKey: ClientRes[i]['SecretKey'], password: ClientRes[i]['Password'] })
                }
                var totp = await fetch('/api/topt_generate_authenticator', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ BarCode: this.state.barCode }),
                }).then((result) => result.json()) // here
                    .then((result) => {
                        //console.log(result)
                        return result["authenticator_otp"]
                    })
                if (totp) {
                    this.setState({ otp: totp })
                }
                if ((this.state.otp) && (this.state.apiKey) && (this.state.secretKey) && (this.state.password) && (this.state.userName)) {
                    await fetch('/api/zerodhaLogin', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ ApiKey: this.state.apiKey, SecretKey: this.state.secretKey, ClntID: this.state.userName, Clntpwd: this.state.password, Totp: this.state.otp }),
                    }).then((result) => result.json()) // here
                        .then((result) => {
                            console.log(JSON.stringify(result))
                            if (result["login"]) {
                                this.setState({ accessToken: result["login"]["access_token"], requestToken: result["login"]["1"], loginTime: result["login"]["login_time"] })
                            }
                            // console.log(JSON.stringify(store.getState()))
                            // return result["authenticator_otp"]
                        })
                }

            }
        }
    }
    handleChange(evt) {
        const value = evt.target.value;
        if (value) {

            this.setState({
                [evt.target.name]: value
            });
            //}
        } else {
            this.setState({
                [evt.target.name]: ''
            });
        }
        console.log(evt.target.name + " " + evt.target.value)
    }

    render() {

        return (
            <div className={styles.container}>
                <ToastContainer />
                <Head>
                    <title>Admin Strategy</title>
                    <meta name="description" content="Generated by create next app" />
                    <link rel="icon" href="/favicon.ico" />
                </Head>
                <main>
                    <div class="login-page bg-light">
                        <div class="container">
                            <div class="row">
                                <div class="col-lg-10 offset-lg-1">
                                    <h3 class="mb-3">Login</h3>
                                    <div class="bg-white shadow rounded" style={{ width: "auto" }}>
                                        <div class="row">
                                            <div class="col-md-7 pe-0">
                                                <div class="form-left h-100 py-5 px-5">
                                                    {  /*<form
                                                    //onSubmit={(e) => { e.preventDefault(); this.GenerateOtp() }}
                                                    >*/}
                                                    <div class="row g-4">
                                                        <div class="col-12">
                                                            <label>UserID<span class="text-danger">*</span></label>
                                                            <div class="input-group">
                                                                <div class="input-group-text"><IoIosPerson /></div>
                                                                <input type="text" name="userName" value={this.state.userName ? this.state.userName : ""} onChange={(evt) => { this.handleChange(evt) }} class="form-control" placeholder="Enter User Id" />
                                                            </div>
                                                        </div>

                                                        <div class="col-12">
                                                            <label>BarCode<span class="text-danger">*</span></label>
                                                            <div class="input-group">
                                                                <div class="input-group-text"><IoIosBarcode /></div>
                                                                <input type="text" name="barCode" value={this.state.barCode ? this.state.barCode : ""} onChange={(evt) => { this.handleChange(evt) }} class="form-control" placeholder="Enter BarCode" />
                                                            </div>
                                                        </div>

                                                        { /*<div class="col-sm-6">
                                                                <div class="form-check">
                                                                    <input class="form-check-input" type="checkbox" id="inlineFormCheck" />
                                                                    <label class="form-check-label" for="inlineFormCheck">Remember me</label>
                                                                </div>
                                                            </div>

                                                            <div class="col-sm-6">
                                                                <a href="#" class="float-end text-primary">Forgot Password?</a>
                                                            </div>*/}

                                                        <div class="col-12">
                                                            {/*<input type="submit" onTouchStartCapture={() => { this.GenerateOtp() }} onClick={() => { this.GenerateOtp() }} class="btn btn-primary px-4 float-end mt-4" text="Login" />*/}
                                                            <button onClick={() => { this.GenerateOtp() }} class="btn btn-primary px-4 float-end mt-4">Login</button>
                                                        </div>
                                                        {/* <div>
                                                                Not a member? <span onClick={() => { Router.router.push("/userRegistrationPage") }} style={{ color: '#1e90ff', fontWeight: 'bold', cursor: 'pointer' }}>Register</span>
        </div>*/}
                                                    </div>
                                                    {/*</form>*/}
                                                </div>
                                            </div>
                                            {/*<div class="col-md-5 ps-0 d-none d-md-block">
                                                <div class="form-right h-100 bg-primary text-white text-center pt-5">
                                                    <h2 class="fs-1">Welcome Back!!!</h2>
                                                </div>
        </div>*/}
                                            {this.state.otp ? <div class="col-md-5 ps-0 d-none d-md-block">
                                                <div style={{ display: 'flex', flexDirection: 'column', width: '100%', height: '100%' }}>
                                                    <div style={{ alignSelf: "center", padding: 20 }}>
                                                        <span style={{ fontSize: 20, fontWeight: 'bold', paddingBottom: "30px" }}>OTP</span>
                                                        <OtpInput
                                                            inputStyle={{ width: "40px", height: "40px" }}

                                                            value={this.state.otp}
                                                            // onChange={setOtp}
                                                            numInputs={6}
                                                            renderSeparator={<span style={{ padding: "5px" }}> - </span>}
                                                            renderInput={(props) => <input {...props} />}
                                                        />
                                                    </div>
                                                    <div style={{ alignSelf: "center", padding: 20 }}>
                                                        <div>
                                                            <span style={{ fontSize: 14, fontWeight: 'bold', paddingBottom: "10px" }}>Access Token</span>
                                                        </div>
                                                        <div>
                                                            <span style={{ fontSize: 16, fontWeight: 'bold', paddingBottom: "10px", color: "red" }}>{this.state.accessToken}</span>

                                                        </div>
                                                    </div>
                                                    <div style={{ alignSelf: "center", padding: 20 }}>
                                                        <div>
                                                            <span style={{ fontSize: 14, fontWeight: 'bold', paddingBottom: "10px" }}>Request Token</span>
                                                        </div>
                                                        <div>
                                                            <span style={{ fontSize: 16, fontWeight: 'bold', paddingBottom: "10px", color: "red" }}>{this.state.requestToken}</span>
                                                        </div>
                                                    </div>
                                                    <div style={{ alignSelf: "center", padding: 20 }}>
                                                        <div>
                                                            <span style={{ fontSize: 14, fontWeight: 'bold', paddingBottom: "10px" }}>Login Time </span>
                                                        </div>
                                                        <div>
                                                            <span style={{ fontSize: 16, fontWeight: 'bold', paddingBottom: "10px", color: "red" }}>{this.state.loginTime}</span>

                                                        </div>
                                                    </div>
                                                </div></div> : <></>}
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                </main>
            </div>
        )
    }
}